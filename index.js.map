{"version":3,"file":"index.js","sources":["../src/redux/contactsSlice.js","../src/redux/filtersSlice.js","../src/redux/store.js","../src/components/ContactForm/ContactForm.styled.jsx","../src/components/ContactForm/ContactForm.jsx","../src/components/ContactList/ContactList.styled.jsx","../src/components/ContactItem/ContactItem.styles.jsx","../src/components/ContactItem/ContactItem.jsx","../src/components/ContactList/ContactList.jsx","../src/components/Filter/Filter.styled.jsx","../src/components/Filter/Filter.jsx","../src/App.styles.jsx","../src/App.jsx","../src/index.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  items: [],\n};\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addContact: (state, action) => {\n      state.items.push(action.payload);\n    },\n    deleteContact: (state, action) => {\n      state.items = state.items.filter(contact => contact.id !== action.payload);\n    },\n  },\n});\n\nexport const { addContact, deleteContact } = contactsSlice.actions;\n\nexport const selectContacts = state => state.contacts.items;\n\nexport default contactsSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  name: '',\n};\n\nconst filtersSlice = createSlice({\n  name: 'filters',\n  initialState,\n  reducers: {\n    changeFilter: (state, action) => {\n      state.name = action.payload;\n    },\n  },\n});\n\nexport const { changeFilter } = filtersSlice.actions;\n\nexport const selectNameFilter = state => state.filters.name;\n\nexport default filtersSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contactsSlice';\nimport filtersReducer from './filtersSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\n\nconst persistedContactsReducer = persistReducer(persistConfig, contactsReducer);\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistedContactsReducer,\n    filters: filtersReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'], \n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  border: 2px solid #605f5f;\n  padding: 20px;\n`;\n\nexport const Label = styled.label`\n  display: contents;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  max-width: 130px;\n  max-height: 5px;\n  padding: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  height: 15px;\n  width: 62px;\n  font-size: 8px;\n  cursor: pointer;\n\n  &:active {\n    background-color: #4972fa;\n    border-radius: 2px;\n    border: none;\n  }\n`;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contactsSlice';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === 'name') setName(value);\n    else if (name === 'number') setNumber(value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(addContact({ id: uuidv4(), name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-around;\n  padding: 5px;\n  border-bottom: 1px solid #ccc;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  height: 15px;\n  width: 38px;\n  font-size: 8px;\n\n  &:active {\n    background-color: #4972fa;\n    border-radius: 2px;\n    border: none;\n  }\n`;","import React from 'react';\nimport { ListItem, Button } from './ContactItem.styles';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contactsSlice';\n\nconst ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <ListItem>\n      <span>{contact.name}: {contact.number}</span>\n      <Button type=\"button\" onClick={handleDeleteContact}>Delete</Button>\n    </ListItem>\n  );\n};\n\nexport default ContactItem;","import React from 'react';\nimport { List } from './ContactList.styled';\nimport ContactItem from '../ContactItem/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contactsSlice';\nimport { selectNameFilter } from '../../redux/filtersSlice';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectNameFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <List>\n      {filteredContacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  margin-bottom: 20px; /* Простір під фільтром */\n`;\n\nexport const FilterInput = styled.input`\n  max-width: 130px;\n  max-height: 5px;\n  padding: 5px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n`;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/filtersSlice';\nimport { FilterInput } from './Filter.styled';\nimport { Label } from '../ContactForm/ContactForm.styled'\nimport { selectNameFilter } from '../../redux/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectNameFilter);\n\n  const handleFilterChange = (event) => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n  display: grid;\n  justify-content: center;\n  background-color: #f0f0f0;\n`;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter'\nimport { AppContainer } from './App.styles';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <AppContainer>\n          <h1>Книга контактів</h1>\n          <ContactForm />\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </AppContainer>\n      </PersistGate>\n    </Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n);"],"names":["initialState","contactsSlice","createSlice","state","action","contact","addContact","deleteContact","selectContacts","contactsReducer","filtersSlice","changeFilter","selectNameFilter","filtersReducer","persistConfig","storage","persistedContactsReducer","persistReducer","store","configureStore","getDefaultMiddleware","persistor","persistStore","Form","styled","Label","Input","Button","ContactForm","dispatch","useDispatch","name","setName","useState","number","setNumber","handleChange","event","value","handleSubmit","uuidv4","React","List","ListItem","ContactItem","handleDeleteContact","ContactList","contacts","useSelector","filter","filteredContacts","FilterInput","Filter","handleFilterChange","AppContainer","App","Provider","PersistGate","root","ReactDOM"],"mappings":"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"}